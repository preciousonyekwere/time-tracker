pipeline{
    agent {
  label 'node1.1'
}
stages{
 stage('compilation') {
  steps {
    // One or more steps need to be included within the steps block.
    sh 'mvn -B compile'
  }
}
stage('SonarQube analysis') {
    steps {
    withSonarQubeEnv(credentialsId: 'SonarQube-key', installationName: 'SonarQube') { // You can override the credential to be used
      sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.7.0.1746:sonar'
    }
    }
  }
stage('mvn package') {
  steps {
    // One or more steps need to be included within the steps block.
    sh 'mvn package'
  }
}

// stage('dev deploy'){
// steps{
// deploy adapters: [tomcat8(credentialsId: 'presh-deploy', path: '', url: 'http://172.31.10.101:8080')], contextPath: null, war: '**/*.war'
          //  } 
       //  }
  stage('QA deploy'){
steps{
deploy adapters: [tomcat9(credentialsId: 'deploy-key', path: '', url: 'http://172.31.18.207:8080')], contextPath: null, war: '**/*.war'
            } 
        }
 stage('mail') {
  steps {
    // One or more steps need to be included within the steps block.
     mail bcc: '', body: 'echo building now as requested', cc: '', from: '', replyTo: '', subject: 'building now', to: 'precilizy23@yahoo.com'
   }
 }
 stage('continuesTesting'){
            steps{
                git branch: 'main', credentialsId: 'github-webhook', url: 'https://github.com/Technicalcourses2021/sampleMavenJunit.git'
                sh 'mvn clean install'
            }   
        } 
}
post {
  always {
    // One or more steps need to be included within each condition's block.
    sh 'echo building now'
  }
  success {
    // One or more steps need to be included within each condition's block.
    sh 'echo yooo! its working'
  }
  failure {
    // One or more steps need to be included within each condition's block.
    sh 'echo ouch!! try again bitches'
  }
}  
}
